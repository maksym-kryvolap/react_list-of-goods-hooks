{"version":3,"sources":["App.tsx","Components/Good.tsx","index.tsx"],"names":["SortType","Good","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","reset","setReset","visibleGoods","goods","type","reversed","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","classNames","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OACE,oBAAI,UAAQ,OAAZ,SACGA,KDHMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGH,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAMI,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASL,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEMC,EA9BR,SACEC,EACAC,EACAC,GAEA,IAAMH,EAAY,YAAOC,GAEzB,OAAQC,GACN,KAAKf,EAASiB,SACZJ,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKpB,EAASsB,OACZT,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU7C,OAJIP,GACFH,EAAaW,UAGRX,EAQcY,CAAkBtB,EAAiBM,EAAUH,GAElE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEX,KAAK,SACLW,UAAWC,IACT,iBACA,CAAE,WAAYlB,IAAaT,EAASiB,WAEtCW,QAAS,WACPlB,EAAYV,EAASiB,UACrBL,GAAS,IARb,iCAcA,wBACEG,KAAK,SACLW,UAAWC,IACT,oBACA,CAAE,WAAYlB,IAAaT,EAASsB,SAEtCM,QAAS,WACPlB,EAAYV,EAASsB,QACrBV,GAAS,IARb,4BAcA,wBACEG,KAAK,SACLW,UAAWC,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,WACPrB,GAAeD,GACfM,GAAS,IARb,qBAcCD,GACC,wBACEI,KAAK,SACLW,UAAU,4BACVE,QAAS,WACPrB,GAAc,GACdG,EAAYV,EAASQ,MACrBI,GAAS,IANb,sBAcJ,6BACE,6BACGC,EAAagB,KAAI,SAAA3B,GAAI,OACpB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,cErHnC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c8fd438.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Good } from './Components/Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  type: SortType,\n  reversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (type) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (reversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reset, setReset] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n            setReset(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n            setReset(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n            setReset(true);\n          }}\n        >\n          Reverse\n        </button>\n\n        {reset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n              setReset(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <Good good={good} key={good} />\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string,\n};\n\nexport const Good: React.FC<Props> = ({ good }) => {\n  return (\n    <li data-cy=\"Good\">\n      {good}\n    </li>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}